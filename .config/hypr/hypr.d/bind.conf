# https://wiki.hyprland.org/Configuring/Binds/ for more
#
# bind=MODS,key,dispatcher,params
# 
# Flags
#
#   l -> locked, aka. works also when an input inhibitor (e.g. a lockscreen) is active.
#   r -> release, will trigger on release of a key.
#   e -> repeat, will repeat when held.
#   n -> non-consuming, key/mouse events will be passed to the active window in addition to triggering the dispatcher.
#   m -> mouse, see below
#   t -> transparent, cannot be shadowed by other binds.
#   i -> ignore mods, will ignore modifiers.
#

# General binds
bind = SUPER SHIFT, Q, killactive
bind = SUPER SHIFT, X, exit
# bind = SUPER SHIFT, L, exec, swaylock -f -c 000000; hyprctl dispatch dpms off
bind = SUPER SHIFT, SPACE, togglefloating,
bind = SUPER, SPACE, exec, pkill $menu || $menu
bind = SUPER, F, fullscreen, 0
bind = SUPER SHIFT, F, fullscreen, 1
# bindi = , SUPER_L, exec, killall -SIGUSR1 waybar
# bindirt = SUPER, SUPER_L, exec, killall -SIGUSR1 waybar
bind = SUPER, S, toggleswallow
bind = SUPER SHIFT, P, pin
bind = SUPER, G, exec, hyprctl keyword monitor DP-1,3840x2160@60Hz,0x0,1.25 && hyprctl keyword monitor DP-2,3840x2160,3072x-487,1.5,transform,3
bind = SUPER SHIFT, G, exec, hyprctl reload

# Switch between floating and tiled
# bind = SUPER, W, focuswindow 

# Dwindle layout binds
bind = SUPER, P, pseudo, 
bind = SUPER, E, togglesplit,
bind = SUPER, J, togglegroup,
bind = SUPER SHIFT, J, lockactivegroup, toggle
bind = ALT, TAB, changegroupactive, f
bind = ALT SHIFT, TAB, changegroupactive, b

# Move focus with mainMod + arrow keys
bind = SUPER, left, movefocus, l
bind = SUPER, right, movefocus, r
bind = SUPER, up, movefocus, u
bind = SUPER, down, movefocus, d

# Switch workspaces with mainMod + [0-F10]
bind = SUPER, 1, $workspace, m~1
bind = SUPER, 2, $workspace, m~2
bind = SUPER, 3, $workspace, m~3
bind = SUPER, 4, $workspace, m~4
bind = SUPER, 5, $workspace, m~5
bind = SUPER, 6, $workspace, m~6
bind = SUPER, 7, $workspace, m~7
bind = SUPER, 8, $workspace, m~8
bind = SUPER, 9, $workspace, m~9
bind = SUPER, 0, $workspace, m~10
bind = SUPER, F1, $workspace, m~11
bind = SUPER, F2, $workspace, m~12
bind = SUPER, F3, $workspace, m~13
bind = SUPER, F4, $workspace, m~14
bind = SUPER, F5, $workspace, m~15
bind = SUPER, F6, $workspace, m~16
bind = SUPER, F7, $workspace, m~17
bind = SUPER, F8, $workspace, m~18
bind = SUPER, F9, $workspace, m~19
bind = SUPER, F10, $workspace, m~20
bind = SUPER, F11, $workspace, m~21
bind = SUPER, F12, $workspace, m~22

# Move active window to a workspace with mainMod + SHIFT + [0-F10]
bind = SUPER SHIFT, 1, $movetoworkspace, m~1
bind = SUPER SHIFT, 2, $movetoworkspace, m~2
bind = SUPER SHIFT, 3, $movetoworkspace, m~3
bind = SUPER SHIFT, 4, $movetoworkspace, m~4
bind = SUPER SHIFT, 5, $movetoworkspace, m~5
bind = SUPER SHIFT, 6, $movetoworkspace, m~6
bind = SUPER SHIFT, 7, $movetoworkspace, m~7
bind = SUPER SHIFT, 8, $movetoworkspace, m~8
bind = SUPER SHIFT, 9, $movetoworkspace, m~9
bind = SUPER SHIFT, 0, $movetoworkspace, m~10
bind = SUPER SHIFT, F1, $movetoworkspace, m~11
bind = SUPER SHIFT, F2, $movetoworkspace, m~12
bind = SUPER SHIFT, F3, $movetoworkspace, m~13
bind = SUPER SHIFT, F4, $movetoworkspace, m~14
bind = SUPER SHIFT, F5, $movetoworkspace, m~15
bind = SUPER SHIFT, F6, $movetoworkspace, m~16
bind = SUPER SHIFT, F7, $movetoworkspace, m~17
bind = SUPER SHIFT, F8, $movetoworkspace, m~18
bind = SUPER SHIFT, F9, $movetoworkspace, m~19
bind = SUPER SHIFT, F10, $movetoworkspace, m~20
bind = SUPER SHIFT, F11, $movetoworkspace, m~21
bind = SUPER SHIFT, F12, $movetoworkspace, m~22

# Move active window to prev/next empty workspace on current monitor
bind = SUPER SHIFT, backslash, $movetoworkspace, r-1
bind = SUPER, backslash, $movetoworkspace, r+1

# Example special workspace (scratchpad)
# bind = SUPER, MINUS, togglespecialworkspace, magic
# bind = SUPER SHIFT, MINUS, $movetoworkspace, special:magic

# Minimize windows using special workspaces
# bind = SUPER, MINUS, togglespecialworkspace, magic
# bind = SUPER, MINUS, movetoworkspace, +0
# bind = SUPER, MINUS, togglespecialworkspace, magic
# bind = SUPER, MINUS, movetoworkspace, special:magic
# bind = SUPER, MINUS, togglespecialworkspace, magic

# Cycle through existing workspaces on the current output
binde = SUPER SHIFT, TAB, $workspace, r-1 # m-1 
binde = SUPER, TAB, $workspace, r+1 # m+1

# Focus first or last workspace on a monitor
# binde = SUPER, HOME, $workspace, 
binde = SUPER, HOME, exec, $scripts/go_to_workspace.sh home
binde = SUPER, END, exec, $scripts/go_to_workspace.sh end

# Move active window to first workspace on current monitor
binde = SUPER SHIFT, HOME, exec, $scripts/move-to-workspace.sh home
binde = SUPER SHIFT, END, exec, $scripts/move-to-workspace.sh end

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow

# Move window to a direction
bind = SUPER SHIFT, left, movewindow, l
bind = SUPER SHIFT, right, movewindow, r
bind = SUPER SHIFT, up, movewindow, u
bind = SUPER SHIFT, down, movewindow, d

# Applications
bind = SUPER, I, exec, $browser
bind = SUPER, GRAVE, exec, $scripts/foot_with_title.sh -a $editor -e $editor
bind = SUPER, T, exec, $files
bind = SUPER SHIFT, grave, exec, $ide
bind = SUPER, U, exec, $music --start-hidden
bind = SUPER, N, exec, $notes
bind = SUPER, RETURN, exec, $term
bind = SUPER SHIFT, RETURN, exec, $term ssh cr0301

# Sound keys
bindel = , XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%
bindel = , XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
bindel = , XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle
bindl = SHIFT, XF86AudioMute, exec, pactl set-sink-volume @DEFAULT_SINK@ 58%
bindel = , XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Media keys
bindl = , XF86AudioPlay, exec, dbus-send --print-reply --dest=org.mpris.MediaPlayer2.$music /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
bindel = , XF86AudioPrev, exec, dbus-send --print-reply --dest=org.mpris.MediaPlayer2.$music /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous
bindel = , XF86AudioNext, exec, dbus-send --print-reply --dest=org.mpris.MediaPlayer2.$music /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next

# Extra keys used as alternate media keys for quodlibet
bindl = , XF86Launch5, exec, dbus-send --print-reply --dest=org.mpris.MediaPlayer2.$music /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
bindel = , XF86Tools, exec, dbus-send --print-reply --dest=org.mpris.MediaPlayer2.$music /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous
bindel = , XF86Launch7, exec, dbus-send --print-reply --dest=org.mpris.MediaPlayer2.$music /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
bindl = , XF86Launch6, exec, dbus-send --print-reply --dest=org.mpris.MediaPlayer2.$music /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop

# Macropad
## Quodlibet
bindl = , XF86AudioStop, exec, dbus-send --print-reply --dest=org.mpris.MediaPlayer2.$music /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop
bind = SUPER, KP_Multiply, exec, pkill $menu || $scripts/quodlibet-query.sh
bindl = SUPER, KP_SUBTRACT, exec, $scripts/quodlibet-play-random.sh

## Volume
bindel = SHIFT, XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +1%
bindel = SHIFT, XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -1%
bindel = CONTROL, XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +10%
bindel = CONTROL, XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -10%
bindel = SUPER, XF86AudioRaiseVolume, exec, quodlibet --volume-up
bindel = SUPER, XF86AudioLowerVolume, exec, quodlibet --volume-down

# Misc
bind = SUPER, Y, exec, $eyedropper

# Screenshot

# Capture the specified screen area to clipboard    
bind = , Print, exec, grim -g "$(slurp)" - | wl-copy 

# Capture the focused monitor to clipboard    
bind = CONTROL, Print, exec, grim -o $activeworkspacename - | wl-copy

# Capture all screens to clipboard    
bind = CONTROL SHIFT, Print, exec, grim - | wl-copy

# Screen capture

# Start wf-recorder to record selected area
bind = SUPER, Print, exec, pkill wf-recorder || wf-recorder -d /dev/dri/renderD129 -c hevc_vaapi -p q=25 -p preset=veryfast -p rc_mode=ICQ -g "$(slurp)" -f $screencaps/screencap_$(date +'%Y%m%d_%H%M%S').mp4

# Start recording the current screen
bind = SUPER SHIFT, Print, exec, pkill wf-recorder || wf-recorder -d /dev/dri/renderD129 -c hevc_vaapi -p q=25 -p preset=veryfast -p rc_mode=ICQ -f $screencaps/screencap_$(date +'%Y%m%d_%H%M%S').mp4 -o $activeworkspacename

# Start recording current window
bind = SUPER CONTROL, Print, exec, pkill wf-recorder || wf-recorder -d /dev/dri/renderD129 -c hevc_vaapi -F hwupload,scale_vaapi=format=nv12 -g "$(hyprctl activewindow -j | jq -r '(.at[0]|tostring) + "," + (.at[1]|tostring) + " " + (.size[0]|tostring) + "x" + (.size[1]|tostring)')" -f $screencaps/screencap_$(date +'%Y%m%d_%H%M%S').mp4 >> $log/wf-recorder.log

# Clipboard
bind = SUPER, V, exec, cliphist list | $menu --dmenu | cliphist decode | wl-copy

# Resize
# Pixel dimensions of $mid monitor is 6144x1703
# Ideal video dimensions: 1387x779
bind = SUPER SHIFT, R, exec, hyprctl dispatch resizeactive $(echo -e "exact 100% 100%\nexact 50% 100%\nexact 25% 50%\nexact 3072 1703\nexact 1536 1703\nexact 1387 779\nexact 1387 924\nexact 1482 834\nexact 1482 869\nexact 1482 1703\nexact 2331 1703\nexact 1440 2536\nexact 1440 1268\nexact 2048 1703\nexact 1920 1080\nexact 1280 720" | fuzzel --dmenu)

# Move to monitor
bind = SUPER SHIFT, M, exec, hyprctl dispatch movewindow $(hyprctl monitors -j | jq -r '"mon:" + .[].name' | fuzzel --dmenu) -r && hyprctl dispatch centerwindow

# Switch to resize submap
bind = SUPER, R, submap, resize
submap = resize
binde = , right, resizeactive, 1% 1%
binde = , left, resizeactive, -1% -1%
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10
bind = , escape, submap, reset
bind = , catchall, submap, reset
submap = reset

# Move submap
bind = SUPER, M, submap, move
submap = move
binde = , right, moveactive, 10 0
binde = SHIFT, right, moveactive, 1 0
binde = CONTROL, right, moveactive, 20 0
binde = , left, moveactive, -10 0
binde = SHIFT, left, moveactive, -1 0
binde = CONTROL, left, moveactive, -20 0
binde = , up, moveactive, 0 -10
binde = SHIFT, up, moveactive, 0 -1
binde = CONTROL, up, moveactive, 0 -20
binde = , down, moveactive, 0 10
binde = SHIFT, down, moveactive, 0 1
binde = CONTROL, down, moveactive, 0 20
bind = , escape, submap, reset
bind = , catchall, submap, reset
submap = reset
